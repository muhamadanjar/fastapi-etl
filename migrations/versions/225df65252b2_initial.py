"""initial

Revision ID: 225df65252b2
Revises: 
Create Date: 2025-07-20 18:57:36.782875

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '225df65252b2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('etl_jobs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('job_type', sa.Enum('EXTRACT', 'TRANSFORM', 'LOAD', 'VALIDATE', name='jobtype'), nullable=False),
    sa.Column('job_category', sa.Enum('FILE_PROCESSING', 'DATA_CLEANING', 'AGGREGATION', 'VALIDATION', 'EXPORT', name='jobcategory'), nullable=False),
    sa.Column('source_type', sa.Enum('FILE', 'API', 'DATABASE', 'STREAM', name='sourcetype'), nullable=False),
    sa.Column('target_schema', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('target_table', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('job_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('schedule_expression', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='etl_control'
    )
    op.create_index(op.f('ix_etl_control_etl_jobs_id'), 'etl_jobs', ['id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_etl_jobs_is_active'), 'etl_jobs', ['is_active'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_etl_jobs_job_category'), 'etl_jobs', ['job_category'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_etl_jobs_job_name'), 'etl_jobs', ['job_name'], unique=True, schema='etl_control')
    op.create_index(op.f('ix_etl_control_etl_jobs_job_type'), 'etl_jobs', ['job_type'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_etl_jobs_source_type'), 'etl_jobs', ['source_type'], unique=False, schema='etl_control')
    op.create_table('quality_rules',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('rule_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('rule_type', sa.Enum('COMPLETENESS', 'UNIQUENESS', 'VALIDITY', 'CONSISTENCY', 'ACCURACY', 'TIMELINESS', 'REFERENTIAL_INTEGRITY', name='ruletype'), nullable=False),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('field_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('rule_expression', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('error_threshold', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='etl_control'
    )
    op.create_index(op.f('ix_etl_control_quality_rules_entity_type'), 'quality_rules', ['entity_type'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_rules_field_name'), 'quality_rules', ['field_name'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_rules_id'), 'quality_rules', ['id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_rules_is_active'), 'quality_rules', ['is_active'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_rules_rule_name'), 'quality_rules', ['rule_name'], unique=True, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_rules_rule_type'), 'quality_rules', ['rule_type'], unique=False, schema='etl_control')
    op.create_table('users',
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('job_executions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('job_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('batch_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('RUNNING', 'SUCCESS', 'FAILED', 'CANCELLED', 'PENDING', 'TIMEOUT', name='executionstatus'), nullable=False),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_successful', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('execution_log', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('performance_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['etl_control.etl_jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='etl_control'
    )
    op.create_index(op.f('ix_etl_control_job_executions_batch_id'), 'job_executions', ['batch_id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_job_executions_id'), 'job_executions', ['id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_job_executions_job_id'), 'job_executions', ['job_id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_job_executions_status'), 'job_executions', ['status'], unique=False, schema='etl_control')
    op.create_table('quality_check_results',
    sa.Column('check_result', sa.Enum('PASS', 'FAIL', 'WARNING', 'SKIP', 'ERROR', name='checkresult'), nullable=False),
    sa.Column('records_checked', sa.Integer(), nullable=True),
    sa.Column('records_passed', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('failure_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('check_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('rule_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('execution_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['execution_id'], ['etl_control.job_executions.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['etl_control.quality_rules.id'], ),
    sa.PrimaryKeyConstraint('check_id'),
    schema='etl_control'
    )
    op.create_index(op.f('ix_etl_control_quality_check_results_check_result'), 'quality_check_results', ['check_result'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_check_results_execution_id'), 'quality_check_results', ['execution_id'], unique=False, schema='etl_control')
    op.create_index(op.f('ix_etl_control_quality_check_results_rule_id'), 'quality_check_results', ['rule_id'], unique=False, schema='etl_control')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_etl_control_quality_check_results_rule_id'), table_name='quality_check_results', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_check_results_execution_id'), table_name='quality_check_results', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_check_results_check_result'), table_name='quality_check_results', schema='etl_control')
    op.drop_table('quality_check_results', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_job_executions_status'), table_name='job_executions', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_job_executions_job_id'), table_name='job_executions', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_job_executions_id'), table_name='job_executions', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_job_executions_batch_id'), table_name='job_executions', schema='etl_control')
    op.drop_table('job_executions', schema='etl_control')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_etl_control_quality_rules_rule_type'), table_name='quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_rules_rule_name'), table_name='quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_rules_is_active'), table_name='quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_rules_id'), table_name='quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_rules_field_name'), table_name='quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_quality_rules_entity_type'), table_name='quality_rules', schema='etl_control')
    op.drop_table('quality_rules', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_source_type'), table_name='etl_jobs', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_job_type'), table_name='etl_jobs', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_job_name'), table_name='etl_jobs', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_job_category'), table_name='etl_jobs', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_is_active'), table_name='etl_jobs', schema='etl_control')
    op.drop_index(op.f('ix_etl_control_etl_jobs_id'), table_name='etl_jobs', schema='etl_control')
    op.drop_table('etl_jobs', schema='etl_control')
    # ### end Alembic commands ###
